[{"C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\index.js":"1","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\App.js":"2","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\Post.js":"3","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\Navbar.js":"4","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\Project.js":"5","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\SinglePost.js":"6","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\SingleProject.js":"7","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\Sort.js":"8","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\Switch_Mode.js":"9","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Pages\\Home.js":"10","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Pages\\About.js":"11","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\Paginate.js":"12","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\client.js":"13","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\Like.js":"14","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\Footer.js":"15","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\TimePlate.js":"16","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\PaginateButton.js":"17"},{"size":138,"mtime":1610411139435,"results":"18","hashOfConfig":"19"},{"size":1605,"mtime":1611436164999,"results":"20","hashOfConfig":"19"},{"size":6272,"mtime":1611448639465,"results":"21","hashOfConfig":"19"},{"size":3239,"mtime":1611525383218,"results":"22","hashOfConfig":"19"},{"size":2192,"mtime":1611189339825,"results":"23","hashOfConfig":"19"},{"size":1928,"mtime":1611435774160,"results":"24","hashOfConfig":"19"},{"size":3888,"mtime":1611448476036,"results":"25","hashOfConfig":"19"},{"size":4221,"mtime":1611447888727,"results":"26","hashOfConfig":"19"},{"size":3065,"mtime":1611524082716,"results":"27","hashOfConfig":"19"},{"size":5298,"mtime":1611524654038,"results":"28","hashOfConfig":"19"},{"size":11129,"mtime":1611529974953,"results":"29","hashOfConfig":"19"},{"size":575,"mtime":1611435970331,"results":"30","hashOfConfig":"19"},{"size":138,"mtime":1610411311018,"results":"31","hashOfConfig":"19"},{"size":1458,"mtime":1611436042303,"results":"32","hashOfConfig":"19"},{"size":818,"mtime":1611377690701,"results":"33","hashOfConfig":"19"},{"size":1853,"mtime":1611435497225,"results":"34","hashOfConfig":"19"},{"size":333,"mtime":1611199197587,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1h8w7jq",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\index.js",[],["77","78"],"C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\App.js",["79","80"],"import React, {useState} from 'react'\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport './../styles/App.css'\r\nimport Home from './Pages/Home';\r\nimport About from './Pages/About';\r\nimport Post from './Widgets/Post';\r\nimport SinglePost from './Widgets/SinglePost'\r\nimport Project from './Widgets/Project';\r\nimport Navbar from './Widgets/Navbar';\r\n// import Sort from './Widgets/Sort';\r\nimport SingleProject from './Widgets/SingleProject';\r\nimport Switch_Mode from './Widgets/Switch_Mode';\r\n\r\n\r\n\r\n\r\nexport default function App() {\r\n\r\n    const [theme, setTheme] = useState('Light');\r\n    const htmlTheme = document.getElementById('html')\r\n\r\n    const getTheme = (theme) => {\r\n        setTheme(theme);\r\n        htmlTheme.setAttribute('data-theme', theme)\r\n    }\r\n\r\n    return (\r\n        // <ThemeProvider theme = {lightTheme}>\r\n        //     <GlobalStyles/>\r\n        <div className = \"background-home\">\r\n        <BrowserRouter>\r\n        <Navbar></Navbar>\r\n        <Switch_Mode getTheme = {getTheme}></Switch_Mode>\r\n            <Switch>\r\n                <Route component = {Home} exact path = \"/\"/>\r\n                <Route component = {About} path = \"/about\"/>\r\n                <Route component = {SinglePost} path = \"/post/:slug\"/>\r\n                <Route component = {SingleProject} path = \"/project/:slug\"/>\r\n                <Route component = {Post} path = \"/post\"/>\r\n                <Route component = {Project} path = \"/project\"/>\r\n            </Switch>         \r\n        </BrowserRouter>\r\n        {/* <Footer></Footer> */}\r\n        </div>\r\n        // </ThemeProvider>\r\n    )\r\n}\r\n","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\Post.js",[],"C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\Navbar.js",["81","82"],"C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\Project.js",["83"],"import React, {useState, useEffect} from 'react'\r\nimport sanityClient from '../../client';\r\nimport '../../styles/Projects/Project.css'\r\nimport '../../styles/Post/Post.css';\r\nimport {Link} from 'react-router-dom';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\n\r\nconst defQuery = `*[_type == \"project\"] | order (publishedAt desc){\r\n                    title,\r\n                    slug,\r\n                    publishedAt,\r\n                    description,\r\n                    image{\r\n                        asset->{\r\n                            _id,\r\n                            url\r\n                        },\r\n                        alt\r\n                    }\r\n                }`\r\nexport default function Project() {\r\n    const [projects, setProjects] = useState(null);\r\n\r\nuseEffect (()=> {\r\n        const res = async () => {\r\n            const data = await sanityClient\r\n                .fetch(defQuery)\r\n                setProjects(data);\r\n        }\r\n        res();\r\n         \r\n    }, [defQuery]);\r\n\r\n\r\n\r\n\r\nconst genProjects = projects !== null ? projects.map((project, i) => {\r\n    const date = project.publishedAt\r\n    return (\r\n        <div className = \"project--item\">\r\n            <div className = \"project--img\">\r\n            <img src= {project.image.asset.url} alt = \"imi\"/>\r\n            </div>\r\n            <div className = \"project--mid\">\r\n            <p className = \"project--date\"> {date.slice(0, 10)} </p>\r\n            <div className = \"project--title\"> {project.title} </div>\r\n            <p className = \"project--description\"> {project.description} </p>\r\n            </div>\r\n            <div className = \"project--footer\">\r\n               <Link className = \"btn-proj\" to = {\"/project/\" + project.slug.current}>\r\n                    Explore\r\n                </Link>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}) : <Spinner animation = \"border\" />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className = \"container--projects-main\">\r\n            <div className = \"project--title-main\">\r\n                My Projects\r\n            </div>\r\n            <div className = \"container--projects\">\r\n                {genProjects}\r\n            </div>       \r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\SinglePost.js",[],"C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\SingleProject.js",["84"],"import React, {useEffect, useState} from 'react'\r\nimport {useParams} from 'react-router-dom';\r\nimport sanityClient from '../../client'\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport github from './../../img/github.png'\r\nimport './../../styles/Projects/SingleProject.css';\r\n\r\nexport default function SingleProject() {\r\n    const [project, setProject] = useState(null);\r\n    const {slug} = useParams();\r\n    // const [links, setLinks] = useState([]); \r\n\r\n//     const Links = (project) => {\r\n//         if (project !== null){\r\n//             if (project.gitLink !== undefined){\r\n//                 setLinks([...links, project.gitLink])\r\n//             }\r\n//             if (project.extLink !== undefined){\r\n//                 setLinks([...links, project.extLink])\r\n//             }\r\n//             if (project.kagLink !== undefined){\r\n//                 setLinks([...links, project.kagLink])\r\n//             }\r\n//     }\r\n// }\r\n\r\n    // const genLinks = links[0] !== undefined ? links.map ((link, i) => {\r\n    //     return (\r\n    //         <a href = {link}> {link} </a>\r\n    //     )\r\n    // }) : <div> Loading ... </div>\r\n\r\n\r\n    useEffect (() => {\r\n        const req = async () => {\r\n            const res = await sanityClient.fetch(`*[slug.current == \"${slug}\"]{\r\n            title, \r\n            _id,\r\n            slug,\r\n            description,\r\n            publishedAt,\r\n            title1,\r\n            title2,\r\n            image{\r\n                asset -> {\r\n                    _id,\r\n                    url\r\n                }\r\n            },\r\n            imageCon1 {\r\n                asset -> {\r\n                    _id, \r\n                    url\r\n                }\r\n            },\r\n            imageCon2 {\r\n                asset -> {\r\n                    _id, \r\n                    url\r\n                }\r\n            },\r\n            content1,\r\n            content2,\r\n            gitLink,\r\n            kagLink,\r\n            extLink,\r\n        }`)\r\n        setProject(res[0])\r\n    }\r\n    req()\r\n    \r\n    // Links(project);\r\n\r\n}, [])\r\n\r\n\r\n\r\n    \r\n    \r\n\r\n    if (project === null){\r\n        return <Spinner animation = \"border\"/>\r\n    }\r\n    return (\r\n        <div className = \"container--sproject-main\">\r\n           <h1> {project.title}</h1>\r\n           <img src = {project.image.asset.url} alt = {\"project\"} />\r\n           <h4> {project.description} </h4>\r\n           <div className = \"sproject--footer\">\r\n              <img  style = {{width : '30px' }} className = \"gitImg\" src = {github} alt = {\"github icon\"}/> \r\n              <a href = {project.gitLink}> Project Link </a>  \r\n           </div>\r\n           {/* <div className = \"container---background\" style = {{background : `url(${project.image.asset.url})`}}>\r\n            </div> */}\r\n           <div className = \"sproject--container\">\r\n               <div className = \"sproject--row\">\r\n                <div className = \"sproject--img\" style = {{background : `url(${project.imageCon1.asset.url})`, backgroundPosition : 'center', backgroundSize : 'cover', padding : '0.2em'}} >\r\n                    \r\n                </div>\r\n                <div className = \"sproject--content\">\r\n                    <h3> {project.title1} </h3>\r\n                    <p> {project.content1} </p>\r\n                </div>\r\n               </div>\r\n               <div id = \"row-2\" className = \"sproject--row\">\r\n                   <div className = \"sproject--content\">\r\n                    <h3> {project.title2} </h3>\r\n                    <p> {project.content2} </p>\r\n                        \r\n                </div>\r\n                <div className = \"sproject--img\" style = {{background : `url(${project.imageCon2.asset.url})`, backgroundPosition : 'center', backgroundSize : 'cover'}}>\r\n                    \r\n                </div>\r\n                \r\n               </div>\r\n               \r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\Sort.js",["85"],"import React, {useState, useEffect} from 'react'\r\nimport sortImg from './../../img/sort.png'\r\nimport './../../styles/Post/Post.css'\r\n\r\nconst catTags = [\r\n    {\r\n        category : \"any\",\r\n        ref : `in [\"08cb4970-7a2a-414c-8c5b-38bba50047b5\",\"b5697028-ea7d-4678-9183-901c12526f11\",\"39b43a49-2478-4c34-9e40-e3479d32c35e\" ]`\r\n    },\r\n    {\r\n        category : \"opinion\",\r\n        ref : `== \"08cb4970-7a2a-414c-8c5b-38bba50047b5\"`\r\n    },\r\n    {\r\n        category : 'dev-diaries',\r\n        ref : ` == \"b5697028-ea7d-4678-9183-901c12526f11\"`\r\n    },\r\n    {\r\n        category : \"story\",\r\n        ref : ` == \"39b43a49-2478-4c34-9e40-e3479d32c35e\"`\r\n    }\r\n]\r\n\r\nconst orders = [\r\n    {\r\n        sortOrder: 'asc'\r\n    },\r\n    {\r\n        sortOrder : 'desc'\r\n    }\r\n]\r\n\r\nconst pages = [\r\n    {\r\n        page : '[0...6]'\r\n    },\r\n    {\r\n        page : '[6...12]'\r\n    },\r\n    {\r\n        page : '[12...18]'\r\n    },\r\n    {\r\n        page : '[18...24]'\r\n    },\r\n    {\r\n        page : '[24...30]'\r\n    },\r\n    {\r\n        page: '[30...36]'\r\n    },\r\n    {\r\n        page : '[36...42]'\r\n    }\r\n]\r\n\r\n\r\n\r\n\r\nexport default function Sort(props) {\r\n    const pageNumber = props.pageNumber;\r\n    const getQuery = props.getQuery;\r\n    const [order, setOrder] = useState('desc');\r\n\r\n\r\n// const [sortQuery, setSortQuery] = useState (queries[0]);\r\n// const [button, setButton] = useState(0);\r\nconst [queryType, setqueryType] = useState(0);\r\n\r\n\r\n\r\n    const selectHandle = (e) => {\r\n        setOrder(e.target.value);\r\n        console.log(order)\r\n        \r\n    }\r\n\r\n    const selectQuery = (e) => {\r\n        // setSortQuery (queries[e.target.value])\r\n        setqueryType(e.target.value)\r\n        }\r\n    \r\n    \r\n\r\n    const genQuery = (order, queryType) => {\r\n        switch (queryType){\r\n            case \"0\":\r\n               return `*[_type==\"post\"] | order(publishedAt ${order}){\r\n                    title,\r\n                    slug,\r\n                    publishedAt,\r\n                    categories[]->{\r\n                        title\r\n                    },\r\n                    description,\r\n                    estimate,\r\n                    mainImage{\r\n                        asset->{\r\n                            _id,\r\n                            url\r\n                        },\r\n                        alt\r\n                    }\r\n                }`    \r\n            default:\r\n               return `*[_type==\"post\" && categories[0]._ref ${catTags[queryType].ref}] | order(publishedAt ${order}){\r\n                   _id,\r\n                    title,\r\n                    slug,\r\n                    publishedAt,\r\n                    categories[]->{\r\n                        title\r\n                    },\r\n                    description,\r\n                    estimate,\r\n                    mainImage{\r\n                        asset->{\r\n                            _id,\r\n                            url\r\n                        },\r\n                        alt\r\n                    }\r\n                }${pages[pageNumber].page}`\r\n        }\r\n    }\r\n         \r\n\r\n    useEffect (() => {\r\n        const query = genQuery(order, queryType, pageNumber)\r\n        getQuery(query)\r\n        // console.log(query)\r\n    }, [order, queryType, pageNumber])\r\n\r\n\r\n    return (\r\n        <div className = \"container--sort-main\">\r\n        <div className = \"container--sort\">\r\n            <img src = {sortImg} alt = \"sort\"/>\r\n            <label htmlFor = \"sortby\"> Sort By </label>\r\n        </div>\r\n        <div className = \"sort--select\">\r\n             <select onChange = {e => selectHandle (e)} name = \"order\">\r\n                 <option value= {orders[1].sortOrder}> Newest </option>\r\n                        <option value= {orders[0].sortOrder}> Oldest </option>\r\n                        \r\n                        \r\n                    </select>\r\n            <select onChange = {e => selectQuery (e)} name = \"type\">\r\n                        <option value={0}> Any         </option>\r\n                        <option value={1}>  Opinion     </option>\r\n                        <option value={3}>  Story       </option>\r\n                        <option value={2}>  Dev Diaries </option>\r\n            </select>\r\n        </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\Switch_Mode.js",["86"],"C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Pages\\Home.js",["87","88"],"C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Pages\\About.js",["89","90","91","92","93","94","95","96","97"],"C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\Paginate.js",[],"C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\client.js",[],"C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\Like.js",["98","99","100"],"import like from './../../img/like.png'\r\nimport unlike from './../../img/unlike.png';\r\nimport react, {useState, useEffect} from 'react';\r\n\r\n\r\n\r\n\r\nexport default function Like (props){\r\n\r\n    const [iconlike, setIconLike] = useState(unlike)\r\n    const [liked, setLiked] = useState(false);\r\n    const [likes, setLikes] = useState(props.likes);\r\n\r\n\r\n    const like_mutation = { \"mutations\" : [{\r\n    \"patch\" : {\r\n        \"id\" : `${props.id}`,\r\n        \"inc\" : {\r\n            \"likes\" : 1\r\n        \r\n    }\r\n}\r\n} ]}\r\n\r\nconst unlike_mutation = {\r\n    \"mutations\" : [{\r\n    \"patch\" : {\r\n        \"id\" : `${props.id}`,\r\n        \"dec\" : {\r\n            \"likes\" : 1\r\n        \r\n    }\r\n}\r\n}]}\r\n    // console.log(props)\r\n\r\n    const handleLike = () => {\r\n        if (liked) {\r\n            setIconLike(unlike)\r\n            setLiked(false)\r\n            setLikes(likes - 1)\r\n            props.handleLike(unlike_mutation)\r\n\r\n        }\r\n        if (!liked){\r\n            setIconLike(like)\r\n            setLiked(true)\r\n            setLikes(likes + 1)\r\n            props.handleLike(like_mutation)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className = \"like--item\">\r\n            <div className = \"like--num\"> {likes} </div>\r\n            <img  onClick = {handleLike} className = \"like--icon\" src = {iconlike}/>\r\n        </div>\r\n    )\r\n}",["101","102"],"C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\Footer.js",[],"C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\TimePlate.js",[],"C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\PaginateButton.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":19,"column":12,"nodeType":"109","messageId":"110","endLine":19,"endColumn":17},{"ruleId":"111","severity":1,"message":"112","line":33,"column":9,"nodeType":"113","endLine":33,"endColumn":44},{"ruleId":"107","severity":1,"message":"114","line":12,"column":17,"nodeType":"109","messageId":"110","endLine":12,"endColumn":23},{"ruleId":"115","severity":1,"message":"116","line":45,"column":8,"nodeType":"117","endLine":45,"endColumn":10,"suggestions":"118"},{"ruleId":"115","severity":1,"message":"119","line":33,"column":8,"nodeType":"117","endLine":33,"endColumn":18,"suggestions":"120"},{"ruleId":"115","severity":1,"message":"121","line":74,"column":4,"nodeType":"117","endLine":74,"endColumn":6,"suggestions":"122"},{"ruleId":"115","severity":1,"message":"123","line":132,"column":8,"nodeType":"117","endLine":132,"endColumn":38,"suggestions":"124"},{"ruleId":"107","severity":1,"message":"108","line":19,"column":12,"nodeType":"109","messageId":"110","endLine":19,"endColumn":17},{"ruleId":"107","severity":1,"message":"125","line":7,"column":8,"nodeType":"109","messageId":"110","endLine":7,"endColumn":14},{"ruleId":"115","severity":1,"message":"126","line":72,"column":8,"nodeType":"117","endLine":72,"endColumn":10,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":113,"column":9,"nodeType":"130","messageId":"131","endLine":132,"endColumn":10},{"ruleId":"128","severity":1,"message":"129","line":140,"column":9,"nodeType":"130","messageId":"131","endLine":159,"endColumn":10},{"ruleId":"107","severity":1,"message":"132","line":161,"column":11,"nodeType":"109","messageId":"110","endLine":161,"endColumn":27},{"ruleId":"128","severity":1,"message":"129","line":163,"column":9,"nodeType":"130","messageId":"131","endLine":173,"endColumn":10},{"ruleId":"115","severity":1,"message":"133","line":197,"column":8,"nodeType":"117","endLine":197,"endColumn":20,"suggestions":"134"},{"ruleId":"135","severity":1,"message":"136","line":271,"column":135,"nodeType":"137","endLine":271,"endColumn":149},{"ruleId":"135","severity":1,"message":"136","line":271,"column":189,"nodeType":"137","endLine":271,"endColumn":219},{"ruleId":"135","severity":1,"message":"136","line":281,"column":135,"nodeType":"137","endLine":281,"endColumn":149},{"ruleId":"135","severity":1,"message":"136","line":281,"column":189,"nodeType":"137","endLine":281,"endColumn":219},{"ruleId":"107","severity":1,"message":"138","line":3,"column":8,"nodeType":"109","messageId":"110","endLine":3,"endColumn":13},{"ruleId":"107","severity":1,"message":"139","line":3,"column":26,"nodeType":"109","messageId":"110","endLine":3,"endColumn":35},{"ruleId":"140","severity":1,"message":"141","line":57,"column":13,"nodeType":"113","endLine":57,"endColumn":85},{"ruleId":"103","replacedBy":"142"},{"ruleId":"105","replacedBy":"143"},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"no-unused-vars","'theme' is assigned a value but never used.","Identifier","unusedVar","react/jsx-pascal-case","Imported JSX component Switch_Mode must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'setHam' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'ref'. Either include it or remove the dependency array.","ArrayExpression",["146"],"React Hook useEffect has an unnecessary dependency: 'defQuery'. Either exclude it or remove the dependency array. Outer scope values like 'defQuery' aren't valid dependencies because mutating them doesn't re-render the component.",["147"],"React Hook useEffect has a missing dependency: 'slug'. Either include it or remove the dependency array.",["148"],"React Hook useEffect has missing dependencies: 'genQuery' and 'getQuery'. Either include them or remove the dependency array.",["149"],"'github' is defined but never used.","React Hook useEffect has a missing dependency: 'genAction'. Either include it or remove the dependency array.",["150"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'handleMouseClick' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'anim' and 'winWidth'. Either include them or remove the dependency array. You can also do a functional update 'setAnim(a => ...)' if you only need 'anim' in the 'setAnim' call.",["151"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'react' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["144"],["145"],"no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},"Update the dependencies array to be: [ref]",{"range":"164","text":"165"},"Update the dependencies array to be: []",{"range":"166","text":"167"},"Update the dependencies array to be: [slug]",{"range":"168","text":"169"},"Update the dependencies array to be: [order, queryType, pageNumber, genQuery, getQuery]",{"range":"170","text":"171"},"Update the dependencies array to be: [genAction]",{"range":"172","text":"173"},"Update the dependencies array to be: [anim, plateHover, winWidth]",{"range":"174","text":"175"},[1302,1304],"[ref]",[992,1002],"[]",[2047,2049],"[slug]",[3190,3220],"[order, queryType, pageNumber, genQuery, getQuery]",[1659,1661],"[genAction]",[6338,6350],"[anim, plateHover, winWidth]"]