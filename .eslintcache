[{"C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\index.js":"1","C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\components\\App.js":"2","C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\components\\Pages\\Home.js":"3","C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\components\\Pages\\About.js":"4","C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\components\\Widgets\\Post.js":"5","C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\components\\Widgets\\Project.js":"6","C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\components\\Widgets\\SinglePost.js":"7","C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\components\\Widgets\\Navbar.js":"8","C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\components\\Widgets\\TimePlate.js":"9","C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\client.js":"10","C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\components\\Widgets\\Sort.js":"11","C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\components\\Widgets\\SingleProject.js":"12","C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\components\\Widgets\\Footer.js":"13","C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\components\\Widgets\\Paginate.js":"14","C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\components\\Widgets\\PaginateButton.js":"15","C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\components\\Widgets\\Like.js":"16","C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\components\\Widgets\\Global.js":"17","C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\components\\Widgets\\Theme.js":"18","C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\components\\Widgets\\Switch_Mode.js":"19"},{"size":138,"mtime":1610411139435,"results":"20","hashOfConfig":"21"},{"size":1746,"mtime":1611363823452,"results":"22","hashOfConfig":"21"},{"size":3196,"mtime":1611363845999,"results":"23","hashOfConfig":"21"},{"size":9711,"mtime":1611376254585,"results":"24","hashOfConfig":"21"},{"size":6311,"mtime":1611210448556,"results":"25","hashOfConfig":"21"},{"size":2192,"mtime":1611189339825,"results":"26","hashOfConfig":"21"},{"size":2227,"mtime":1611378889220,"results":"27","hashOfConfig":"21"},{"size":3258,"mtime":1611378670202,"results":"28","hashOfConfig":"21"},{"size":2622,"mtime":1610776038591,"results":"29","hashOfConfig":"21"},{"size":138,"mtime":1610411311018,"results":"30","hashOfConfig":"21"},{"size":4133,"mtime":1611282683022,"results":"31","hashOfConfig":"21"},{"size":3908,"mtime":1611189698624,"results":"32","hashOfConfig":"21"},{"size":818,"mtime":1611377690701,"results":"33","hashOfConfig":"21"},{"size":589,"mtime":1611199044248,"results":"34","hashOfConfig":"21"},{"size":333,"mtime":1611199197587,"results":"35","hashOfConfig":"21"},{"size":1320,"mtime":1611209806830,"results":"36","hashOfConfig":"21"},{"size":323,"mtime":1611293573583,"results":"37","hashOfConfig":"21"},{"size":375,"mtime":1611293714348,"results":"38","hashOfConfig":"21"},{"size":2848,"mtime":1611378546462,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1c975bd",{"filePath":"43","messages":"44","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"42"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\index.js",[],["89","90"],"C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\components\\App.js",["91","92","93","94","95","96"],"import React, {useState} from 'react'\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport './../styles/App.css'\r\nimport Home from './Pages/Home';\r\nimport About from './Pages/About';\r\nimport Post from './Widgets/Post';\r\nimport SinglePost from './Widgets/SinglePost'\r\nimport Project from './Widgets/Project';\r\nimport Navbar from './Widgets/Navbar';\r\nimport Sort from './Widgets/Sort';\r\nimport SingleProject from './Widgets/SingleProject';\r\nimport {ThemeProvider} from 'styled-components';\r\nimport {lightTheme} from './Widgets/Theme';\r\nimport {GlobalStyles } from './Widgets/Global';\r\nimport Switch_Mode from './Widgets/Switch_Mode';\r\n\r\n\r\n\r\n\r\nexport default function App() {\r\n\r\n    const [theme, setTheme] = useState('Light');\r\n    const htmlTheme = document.getElementById('html')\r\n\r\n    const getTheme = (theme) => {\r\n        setTheme(theme);\r\n        htmlTheme.setAttribute('data-theme', theme)\r\n    }\r\n\r\n    return (\r\n        // <ThemeProvider theme = {lightTheme}>\r\n        //     <GlobalStyles/>\r\n        <div className = \"background-home\">\r\n        <BrowserRouter>\r\n        <Navbar></Navbar>\r\n        <Switch_Mode getTheme = {getTheme}></Switch_Mode>\r\n            <Switch>\r\n                <Route component = {Home} exact path = \"/\"/>\r\n                <Route component = {About} path = \"/about\"/>\r\n                <Route component = {SinglePost} path = \"/post/:slug\"/>\r\n                <Route component = {SingleProject} path = \"/project/:slug\"/>\r\n                <Route component = {Post} path = \"/post\"/>\r\n                <Route component = {Project} path = \"/project\"/>\r\n            </Switch>         \r\n        </BrowserRouter>\r\n        {/* <Footer></Footer> */}\r\n        </div>\r\n        // </ThemeProvider>\r\n    )\r\n}\r\n","C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\components\\Pages\\Home.js",["97","98","99"],"import React from 'react'\r\nimport './../../styles/Home/Home.css';\r\nimport {useState, useEffect} from 'react';\r\nimport {useTransition, animated} from 'react-spring';\r\nimport {motion} from 'framer-motion';\r\nimport linkedin from './../../img/linkedin.png';\r\nimport github from './../../img/github.png';\r\nimport Footer from './../Widgets/Footer';\r\n\r\n\r\nconst newActions = [\r\n    {\r\n        id : 0,\r\n        content : ' code.'\r\n    },\r\n    {\r\n        id : 1,\r\n        content : ' read.'\r\n    },\r\n   {\r\n        id : 2,\r\n        content : ' work.'\r\n    },\r\n    {\r\n        id : 3,\r\n        content : ' design.'\r\n    }, {\r\n        id : 4,\r\n        content : ' create.'\r\n    },\r\n    { \r\n        id : 5,\r\n        content : ' analyze.'\r\n    },\r\n    {\r\n        id : 6,\r\n        content : ' think.'\r\n    },\r\n    {\r\n        id : 7,\r\n        content : ' write.'\r\n    },\r\n    {\r\n        id : 8,\r\n        content : ' imagine.'\r\n    },\r\n    {\r\n        id : 9,\r\n        content: ' experiment.'\r\n    }\r\n]\r\n\r\n\r\nexport default function Home() {\r\n    const [idx, setIdx] = useState(0)\r\n    \r\n\r\n    const transitions = useTransition (newActions[idx], item => item.id, {\r\n        // config : {mass : 10, tension : 70, friction : 20}\r\n        from : {position : 'absolute', opacity : 0, transform : `translateX(-20px)`},\r\n        enter : {opacity : 1, transform : 'translateX(20px)'},\r\n        leave : {opacity : 0, transform : 'translateX(100px)'}\r\n    })\r\n    const genAction = () => {\r\n        setIdx(idx => (idx + 1) % 4);\r\n        if (idx > newActions.length - 1){\r\n            setIdx (0);\r\n        }\r\n    }\r\n    useEffect ( () => {\r\n        setInterval(genAction, 2000)\r\n    }, []) \r\n    \r\n    \r\n\r\n    return (\r\n        \r\n        <div className = \"container--home\">\r\n                <motion.div drag dragElastic = {0.5} dragConstraints = {{top : 10, left : -50, right : 50, bottom: 50\r\n                }}\r\n                className = \"container--item header-1\">\r\n                    Hi. I'm\r\n                </motion.div>\r\n                <motion.div drag dragElastic = {0.5} dragConstraints = {{top : -10, left : -50, right : 50, bottom: 50\r\n                }}\r\n                className = \"container--item header-2\">\r\n                    Abdullah Khan\r\n                </motion.div>\r\n                <motion.div drag dragElastic = {0.5} dragConstraints = {{top : 10, left : -50, right : 50, bottom: 50\r\n                }}\r\nclassName = \"container--item headline\">\r\n                    I like to\r\n                    {transitions.map(({item, props, key}) => {\r\n                        return<animated.span key = {key} className = {\"special headline\"} style = {{...props, marginLeft : '0.0em'}} > {\" \"} {item.content} </animated.span>})}\r\n                </motion.div>\r\n                <div className = \"container--icons\">\r\n                    <a   href = \"https://github.com/abdullahkhan9375\"> <img className = \"icon--github\" src = {github}/> </a>\r\n                    <a href = \"https://www.linkedin.com/in/abdullah-khan-91026917b/\"> < img  className = \"icon--linkedin\" src = {linkedin}/></a>\r\n                    \r\n                </div>\r\n                        <Footer></Footer>\r\n                </div>\r\n    )\r\n}\r\n","C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\components\\Pages\\About.js",["100","101","102","103"],"C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\components\\Widgets\\Post.js",["104","105","106","107","108","109","110","111","112","113","114"],"import React, {useState, useEffect} from 'react'\r\nimport sanityClient from '../../client';\r\nimport {Link} from 'react-router-dom';\r\nimport './../../styles/Post/Post.css';\r\nimport BlockContent from '@sanity/block-content-to-react';\r\nimport sortImg from '../../img/sort.png';\r\nimport Sort from './Sort';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Paginate from './../Widgets/Paginate.js';\r\nimport Like from './Like';\r\n\r\n\r\nconst defaultQuery = `*[_type == \"post\"] | order (publishedAt desc){\r\n                    title,\r\n                    _id,\r\n                    slug,\r\n                    publishedAt,\r\n                    likes,\r\n                    categories[]->{\r\n                        title\r\n                    },\r\n                    description,\r\n                    estimate,\r\n                    mainImage{\r\n                        asset->{\r\n                            _id,\r\n                            url\r\n                        },\r\n                        alt\r\n                    }\r\n                }[0...5]`\r\nconst randomColors = [\"#B6465F\", \"#F95738\", \"#C03221\", \"#DD7230\", \"#7D1D3F\",\r\n\"#A69658\", \"#B95F89\", \"#F46036\", \"#6A041D\", \"#BC5D2E\", \"#FF784F\", \"#A663CC\", \"#610F7F\"]\r\n\r\nconst getRandomColor = () => {\r\n    return Math.floor(Math.random() * randomColors.length)\r\n}\r\n\r\n\r\nconst postsPerPage = 5;\r\n\r\n\r\nexport default function Post() {\r\n\r\n    const [sort, setSort] = useState('newestFirst');\r\n    const [query, setquery] = useState (defaultQuery);\r\n    const [length, setLength] = useState(0);\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const [postData, setPost] = useState(null);\r\n\r\n\r\n    useEffect (()=> {\r\n        const res = async () => {\r\n            const data = await sanityClient\r\n                .fetch(query)\r\n                setPost(data)\r\n                \r\n        }\r\n        const res2 = async () => {\r\n            const data2 = await sanityClient.fetch(`*[_type == \"post\"]`)\r\n            setLength(data2.length);\r\n            console.log(length)\r\n        }\r\n\r\n        \r\n        res();\r\n        res2();\r\n        console.log(postData)\r\n         \r\n    }, [query]);\r\n\r\n    const getPostClass = (post) => {\r\n        switch (post.categories[0].title){\r\n            case 'Opinion':\r\n                return `linear-gradient(180deg, rgba(246, 232, 234, 0.85) 2%, ${randomColors[getRandomColor()]} 200%)`;\r\n            case 'Story': \r\n                return`linear-gradient(180deg, rgba(246, 232, 234, 0.85) 2%, ${randomColors[getRandomColor()]} 200%)`;\r\n            case 'Dev Diaries':\r\n                return `linear-gradient(180deg, rgba(246, 232, 234, 0.85) 2%, ${randomColors[getRandomColor()]} 200%)`;\r\n        }\r\n    }\r\n    \r\n    const getNumberHandle = (number) => {\r\n        setPageNumber(number)\r\n    }\r\n\r\n    const projectId = \"g02soeyq\"\r\n    const datasetName = \"production\"\r\n    const token = \"sk2SSgwIjTadTaXcIJZtIL2R7o4JyEzZhOmYETzxr4BBcrEZismV3TVJm2rAK3mgEI2VoHBlvPiTSH9drygDxhFFeMtKpulTulBDF8SrjMemIZ1d9EV37hrxEldRhjnC58Z4N68l4x45VjDAJhcRXCRO4x7YKOTxCSRmNgHDAMr74Mpqasxn\"\r\n\r\n    const handleLike = (mutations) => {\r\n            console.log(mutations)\r\n        fetch(`https://${projectId}.api.sanity.io/v1/data/mutate/${datasetName}`, {\r\n    method: 'post',\r\n    headers: {\r\n        'Content-type': 'application/json',\r\n        'Authorization' : `Bearer ${token}`\r\n    },\r\n    body: JSON.stringify(mutations)\r\n    })\r\n    .then(response => response.json())\r\n    .then(result => console.log(result))\r\n    .catch(error => console.error(error))\r\n        }\r\n\r\n    \r\n    const handleShare = (slug) => {\r\n        var sl = slug\r\n        sl.select()\r\n        document.execCommand('copy')\r\n    }\r\n        \r\n\r\n    // style = {{backgroundImage: `${getPostClass(post)}, url(${post.mainImage.asset.url})`, backgroundSize : 'cover'}}\r\n    const post = postData !== null ? postData.map((post, index) => {\r\n        \r\n        const date = post.publishedAt\r\n        return (\r\n                <div className = {`post--item`}>\r\n                    <div className = \"post--header\">\r\n                        <img className = \"post--img\" src = {post.mainImage.asset.url}/>\r\n                        {/* <Like handleLike = {handleLike} likes = {post.likes} id = {post._id}></Like> */}\r\n                        <p className = \"post--date\"> {date.slice(0, 10)} </p>\r\n                        <h1 className = \"post--title\"> {post.title} </h1>\r\n                        <p className = \"post--description\">\r\n                            {post.description}\r\n                        </p>\r\n                     </div>\r\n                    <div className = \"post--mid\">\r\n                        <Link className = \"btn--read from-right\" to = {\"/post/\" + post.slug.current}>\r\n                         Read\r\n                        </Link>\r\n                        {/* <div onClick = {() => handleShare(post.slug)}  className = \"btn--read from-right\"> Share </div> */}\r\n                    </div>\r\n                    <div className = \"post--footer\">\r\n                         <div className = \"post--estimate\">\r\n                            {post.estimate}\r\n                         </div>\r\n                         <div className = \"post--cat\">\r\n                             {post.categories[0].title}\r\n                         </div>\r\n                         \r\n                     </div>\r\n                </div>\r\n        )\r\n        }) :<Spinner animation=\"grow\" />;\r\n\r\n    const page = postData !== null ? <Paginate getNumber = {getNumberHandle} listLength = {Math.floor(length / postsPerPage)}/> : <div> Loading ... </div>\r\n    const getQuery = (query) => {\r\n        setquery(query);\r\n    }   \r\n\r\n    if (postData === null){\r\n        return <Spinner animation=\"grow\" />\r\n    }\r\n\r\n    return (\r\n        <div className = \"container--main-post\" >\r\n                <div className = \"main-heading\">\r\n                    <h1>Sochmore</h1>\r\n                </div>\r\n                <div className = \"post--sort\">\r\n                    <Sort pageNumber = {pageNumber} getQuery = {getQuery}></Sort>\r\n                </div>\r\n                <div className = \"post--page\">\r\n                   {page}\r\n                </div>\r\n                <div className = \"container--post\">\r\n                    {postData && post}\r\n                </div>\r\n                \r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\components\\Widgets\\Project.js",["115"],"import React, {useState, useEffect} from 'react'\r\nimport sanityClient from '../../client';\r\nimport '../../styles/Projects/Project.css'\r\nimport '../../styles/Post/Post.css';\r\nimport {Link} from 'react-router-dom';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\n\r\nconst defQuery = `*[_type == \"project\"] | order (publishedAt desc){\r\n                    title,\r\n                    slug,\r\n                    publishedAt,\r\n                    description,\r\n                    image{\r\n                        asset->{\r\n                            _id,\r\n                            url\r\n                        },\r\n                        alt\r\n                    }\r\n                }`\r\nexport default function Project() {\r\n    const [projects, setProjects] = useState(null);\r\n\r\nuseEffect (()=> {\r\n        const res = async () => {\r\n            const data = await sanityClient\r\n                .fetch(defQuery)\r\n                setProjects(data);\r\n        }\r\n        res();\r\n         \r\n    }, [defQuery]);\r\n\r\n\r\n\r\n\r\nconst genProjects = projects !== null ? projects.map((project, i) => {\r\n    const date = project.publishedAt\r\n    return (\r\n        <div className = \"project--item\">\r\n            <div className = \"project--img\">\r\n            <img src= {project.image.asset.url} alt = \"imi\"/>\r\n            </div>\r\n            <div className = \"project--mid\">\r\n            <p className = \"project--date\"> {date.slice(0, 10)} </p>\r\n            <div className = \"project--title\"> {project.title} </div>\r\n            <p className = \"project--description\"> {project.description} </p>\r\n            </div>\r\n            <div className = \"project--footer\">\r\n               <Link className = \"btn-proj\" to = {\"/project/\" + project.slug.current}>\r\n                    Explore\r\n                </Link>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}) : <Spinner animation = \"border\" />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className = \"container--projects-main\">\r\n            <div className = \"project--title-main\">\r\n                My Projects\r\n            </div>\r\n            <div className = \"container--projects\">\r\n                {genProjects}\r\n            </div>       \r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\components\\Widgets\\SinglePost.js",["116","117","118"],"C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\components\\Widgets\\Navbar.js",["119","120"],"C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\components\\Widgets\\TimePlate.js",["121","122","123","124","125"],"import react from 'react';\r\nimport {motion} from 'framer-motion';\r\nimport {useState, useEffect} from 'react';\r\nimport './../../styles/About/Plates.css';\r\n\r\nconst timePlates = [\r\n    {\r\n        id : '2018',\r\n        direction : 'left',\r\n        class : 'plate-1',\r\n        title : '\"Hello World\"',\r\n        content : \"I wrote my first line of code. The customary 'Hello World' in Python. I was blown away. I was making small scripts and automating stuff here and there\",\r\n    },\r\n    {\r\n        id : '2019',\r\n        title : 'My First Website',\r\n        direction : 'right',\r\n        class : 'plate-2',\r\n        content : 'I started studying Data Science and Creative Writing in Macquarie University. Throughout the year, I focused on learning new technologies and started Web Development by December 2019. My first website was ugly.'\r\n    },\r\n    {\r\n        id : '2020',\r\n        title : 'Just Warming Up',\r\n        direction : 'left',\r\n        class : 'plate-3',\r\n        content : 'By 2020, I had started delving into the MERN stack. I alternated between Data Science and Web Development projects. By the end of the year, I was adding projects into my portfolio.'\r\n    },\r\n    {\r\n        id : 'null',\r\n        title : '',\r\n        direction : 'left',\r\n        class : 'plate-3',\r\n        content : ''\r\n    }\r\n]\r\n\r\nexport default function TimePlate (props) {\r\n\r\n    const plate = props.plate;\r\n    // const [plate, setPlate] = useState(timePlates[index])\r\n    // const [anim, setAnim] = useState(null);\r\n\r\n    // const leftAnim = {\r\n    //     left :['-10%', '5%', '-10%'],\r\n    //        }\r\n\r\n    // const rightAnim = {\r\n    //     left :['-100%', '5%', '-100%'],\r\n    //        }\r\n\r\n    // const cleanupAnim = {\r\n    //     opacity : 0\r\n    // }\r\n    // const transition = {\r\n    //     duration: 2,\r\n    //     times : [0.2, 0.7, 0.2]\r\n    // }\r\n    // useEffect(() => {\r\n    //     setPlate (timePlates[index])\r\n\r\n    // }, [])\r\n\r\n    // useEffect ( () => {\r\n    //     const animat = async () => {\r\n    //         await setAnim(plate.direction === \"right\" ? rightAnim : leftAnim)\r\n    //     }\r\n    //     animat();\r\n    // }, [plate])\r\n\r\n    return (\r\n        <>\r\n            <div className =  {`timeplate--title ${plate.title_class}`}> \r\n                {plate.title}\r\n            </div>\r\n            <div className = \"timeplate--content\">\r\n               <div className = \"timeplate--content-1\">\r\n                {plate.content_1}\r\n               </div>\r\n               <div className = \"timeplate--content-2\">\r\n                {plate.content_2}\r\n               </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\client.js",[],"C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\components\\Widgets\\Sort.js",["126","127","128"],"import React, {useState, useEffect} from 'react'\r\nimport sortImg from './../../img/sort.png'\r\nimport './../../styles/Post/Post.css'\r\n\r\nconst catTags = [\r\n    {\r\n        category : \"any\",\r\n        ref : `in [\"08cb4970-7a2a-414c-8c5b-38bba50047b5\",\"b5697028-ea7d-4678-9183-901c12526f11\",\"39b43a49-2478-4c34-9e40-e3479d32c35e\" ]`\r\n    },\r\n    {\r\n        category : \"opinion\",\r\n        ref : `== \"08cb4970-7a2a-414c-8c5b-38bba50047b5\"`\r\n    },\r\n    {\r\n        category : 'dev-diaries',\r\n        ref : ` == \"b5697028-ea7d-4678-9183-901c12526f11\"`\r\n    },\r\n    {\r\n        category : \"story\",\r\n        ref : ` == \"39b43a49-2478-4c34-9e40-e3479d32c35e\"`\r\n    }\r\n]\r\n\r\nconst orders = [\r\n    {\r\n        sortOrder: 'asc'\r\n    },\r\n    {\r\n        sortOrder : 'desc'\r\n    }\r\n]\r\n\r\nconst pages = [\r\n    {\r\n        page : '[0...6]'\r\n    },\r\n    {\r\n        page : '[6...12]'\r\n    },\r\n    {\r\n        page : '[12...18]'\r\n    },\r\n    {\r\n        page : '[18...24]'\r\n    },\r\n    {\r\n        page : '[24...30]'\r\n    }\r\n]\r\n\r\n\r\n\r\n\r\nexport default function Sort(props) {\r\n    const pageNumber = props.pageNumber;\r\n    const getQuery = props.getQuery;\r\n    const [order, setOrder] = useState('desc');\r\n\r\n\r\n// const [sortQuery, setSortQuery] = useState (queries[0]);\r\nconst [button, setButton] = useState(0);\r\nconst [queryType, setqueryType] = useState(0);\r\n\r\n\r\n\r\n    const selectHandle = (e) => {\r\n        setOrder(e.target.value);\r\n        console.log(order)\r\n        \r\n    }\r\n\r\n    const selectQuery = (e) => {\r\n        // setSortQuery (queries[e.target.value])\r\n        setqueryType(e.target.value)\r\n        }\r\n    \r\n    \r\n\r\n    const genQuery = (order, queryType) => {\r\n        switch (queryType){\r\n            case \"0\":\r\n               return `*[_type==\"post\"] | order(publishedAt ${order}){\r\n                    title,\r\n                    slug,\r\n                    publishedAt,\r\n                    categories[]->{\r\n                        title\r\n                    },\r\n                    description,\r\n                    estimate,\r\n                    mainImage{\r\n                        asset->{\r\n                            _id,\r\n                            url\r\n                        },\r\n                        alt\r\n                    }\r\n                }`    \r\n            default:\r\n               return `*[_type==\"post\" && categories[0]._ref ${catTags[queryType].ref}] | order(publishedAt ${order}){\r\n                   _id,\r\n                    title,\r\n                    slug,\r\n                    publishedAt,\r\n                    categories[]->{\r\n                        title\r\n                    },\r\n                    description,\r\n                    estimate,\r\n                    mainImage{\r\n                        asset->{\r\n                            _id,\r\n                            url\r\n                        },\r\n                        alt\r\n                    }\r\n                }${pages[pageNumber].page}`\r\n        }\r\n    }\r\n         \r\n\r\n    useEffect (() => {\r\n        const query = genQuery(order, queryType, pageNumber)\r\n        getQuery(query)\r\n        // console.log(query)\r\n    }, [order, queryType, pageNumber])\r\n\r\n\r\n    return (\r\n        <div className = \"container--sort-main\">\r\n        <div className = \"container--sort\">\r\n            <img src = {sortImg} alt = \"sort\"/>\r\n            <label htmlFor = \"sortby\"> Sort By </label>\r\n        </div>\r\n        <div className = \"sort--select\">\r\n             <select onChange = {e => selectHandle (e)} name = \"order\">\r\n                 <option value= {orders[1].sortOrder}> Newest </option>\r\n                        <option value= {orders[0].sortOrder}> Oldest </option>\r\n                        \r\n                        \r\n                    </select>\r\n            <select onChange = {e => selectQuery (e)} name = \"type\">\r\n                        <option value={0}> Any         </option>\r\n                        <option value={1}>  Opinion     </option>\r\n                        <option value={3}>  Story       </option>\r\n                        <option value={2}>  Dev Diaries </option>\r\n            </select>\r\n        </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\components\\Widgets\\SingleProject.js",["129","130","131","132"],"import React, {useEffect, useState} from 'react'\r\nimport {useParams} from 'react-router-dom';\r\nimport sanityClient from '../../client'\r\nimport {Link} from 'react-router-dom';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport github from './../../img/github.png'\r\nimport './../../styles/Projects/SingleProject.css';\r\n\r\nexport default function SingleProject() {\r\n    const [project, setProject] = useState(null);\r\n    const {slug} = useParams();\r\n    // const [links, setLinks] = useState([]); \r\n\r\n//     const Links = (project) => {\r\n//         if (project !== null){\r\n//             if (project.gitLink !== undefined){\r\n//                 setLinks([...links, project.gitLink])\r\n//             }\r\n//             if (project.extLink !== undefined){\r\n//                 setLinks([...links, project.extLink])\r\n//             }\r\n//             if (project.kagLink !== undefined){\r\n//                 setLinks([...links, project.kagLink])\r\n//             }\r\n//     }\r\n// }\r\n\r\n    // const genLinks = links[0] !== undefined ? links.map ((link, i) => {\r\n    //     return (\r\n    //         <a href = {link}> {link} </a>\r\n    //     )\r\n    // }) : <div> Loading ... </div>\r\n\r\n\r\n    useEffect (() => {\r\n        const req = async () => {\r\n            const res = await sanityClient.fetch(`*[slug.current == \"${slug}\"]{\r\n            title, \r\n            _id,\r\n            slug,\r\n            description,\r\n            publishedAt,\r\n            title1,\r\n            title2,\r\n            image{\r\n                asset -> {\r\n                    _id,\r\n                    url\r\n                }\r\n            },\r\n            imageCon1 {\r\n                asset -> {\r\n                    _id, \r\n                    url\r\n                }\r\n            },\r\n            imageCon2 {\r\n                asset -> {\r\n                    _id, \r\n                    url\r\n                }\r\n            },\r\n            content1,\r\n            content2,\r\n            gitLink,\r\n            kagLink,\r\n            extLink,\r\n        }`)\r\n        setProject(res[0])\r\n    }\r\n    req()\r\n    // Links(project);\r\n\r\n}, [])\r\n\r\n\r\n\r\n    \r\n    \r\n\r\n    if (project === null){\r\n        return <Spinner animation = \"border\"/>\r\n    }\r\n    console.log(project)\r\n    return (\r\n        <div className = \"container--sproject-main\">\r\n           <h1> {project.title}</h1>\r\n           <img src = {project.image.asset.url} />\r\n           <h4> {project.description} </h4>\r\n           <div className = \"sproject--footer\">\r\n              <img  style = {{width : '30px' }} className = \"gitImg\" src = {github}/> \r\n              <a href = {project.gitLink}> Project Link </a>  \r\n           </div>\r\n           {/* <div className = \"container---background\" style = {{background : `url(${project.image.asset.url})`}}>\r\n            </div> */}\r\n           <div className = \"sproject--container\">\r\n               <div className = \"sproject--row\">\r\n                <div className = \"sproject--img\" style = {{background : `url(${project.imageCon1.asset.url})`, backgroundPosition : 'center', backgroundSize : 'cover', padding : '0.2em'}} >\r\n                    \r\n                </div>\r\n                <div className = \"sproject--content\">\r\n                    <h3> {project.title1} </h3>\r\n                    <p> {project.content1} </p>\r\n                </div>\r\n               </div>\r\n               <div id = \"row-2\" className = \"sproject--row\">\r\n                   <div className = \"sproject--content\">\r\n                    <h3> {project.title2} </h3>\r\n                    <p> {project.content2} </p>\r\n                        \r\n                </div>\r\n                <div className = \"sproject--img\" style = {{background : `url(${project.imageCon2.asset.url})`, backgroundPosition : 'center', backgroundSize : 'cover'}}>\r\n                    \r\n                </div>\r\n                \r\n               </div>\r\n               \r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\components\\Widgets\\Footer.js",[],"C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\components\\Widgets\\Paginate.js",["133"],"import React, { useState } from 'react'\r\nimport './../../styles/Paginate/Paginate.css';\r\nimport PaginateButton from './../Widgets/PaginateButton';\r\n\r\nexport default function Paginate(props) {\r\n    \r\n    return (\r\n        <div className = \"container--paginate\">\r\n            {[...Array(props.listLength)].map((e, i) => {\r\n                return <PaginateButton getNumber = {props.getNumber} index = {i} key = {i}/>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n// listLength.forEach(element => {\r\n//         return <PaginateButton index=  {element}/>\r\n//     }) : <div> Loading ... </div>","C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\components\\Widgets\\PaginateButton.js",[],"C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\components\\Widgets\\Like.js",["134","135","136"],"import like from './../../img/like.png'\r\nimport unlike from './../../img/unlike.png';\r\nimport react, {useState, useEffect} from 'react';\r\n\r\n\r\n\r\n\r\nexport default function Like (props){\r\n\r\n    const [iconlike, setIconLike] = useState(unlike)\r\n    const [liked, setLiked] = useState(false);\r\n    const [likes, setLikes] = useState(props.likes);\r\n\r\n\r\n    const like_mutation = { \"mutations\" : [{\r\n    \"patch\" : {\r\n        \"id\" : `${props.id}`,\r\n        \"inc\" : {\r\n            \"likes\" : 1\r\n        \r\n    }\r\n}\r\n} ]}\r\n\r\nconst unlike_mutation = {\r\n    \"mutations\" : [{\r\n    \"patch\" : {\r\n        \"id\" : `${props.id}`,\r\n        \"dec\" : {\r\n            \"likes\" : 1\r\n        \r\n    }\r\n}\r\n}]}\r\n    // console.log(props)\r\n\r\n    const handleLike = () => {\r\n        if (liked) {\r\n            setIconLike(unlike)\r\n            setLiked(false)\r\n            setLikes(likes - 1)\r\n            props.handleLike(unlike_mutation)\r\n\r\n        }\r\n        if (!liked){\r\n            setIconLike(like)\r\n            setLiked(true)\r\n            setLikes(likes + 1)\r\n            props.handleLike(like_mutation)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className = \"like--item\">\r\n            <div className = \"like--num\"> {likes} </div>\r\n            <img  onClick = {handleLike} className = \"like--icon\" src = {iconlike}/>\r\n        </div>\r\n    )\r\n}","C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\components\\Widgets\\Global.js",[],"C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\components\\Widgets\\Theme.js",["137"],"\r\n\r\n//variables.\r\nconst mainBlack =  '#04080F';\r\nconst mainBackground = '#dbe8ec';\r\nconst mainBlue = '#28AFB0';\r\nconst boxShadow = '0px 2px 10px 2px rgba(0, 0, 0, 0.09)';\r\n\r\nexport const lightTheme = {\r\n    backgroundColor : mainBackground,\r\n    text : 'fff',\r\n    borderColor : mainBlue,\r\n    textSwitch : 'fff',\r\n    boxShadow : boxShadow,\r\n    secondaryColor : mainBlue\r\n}","C:\\Users\\61433\\Desktop\\WebDev\\blog\\src\\components\\Widgets\\Switch_Mode.js",["138"],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":10,"column":8,"nodeType":"145","messageId":"146","endLine":10,"endColumn":12},{"ruleId":"143","severity":1,"message":"147","line":12,"column":9,"nodeType":"145","messageId":"146","endLine":12,"endColumn":22},{"ruleId":"143","severity":1,"message":"148","line":13,"column":9,"nodeType":"145","messageId":"146","endLine":13,"endColumn":19},{"ruleId":"143","severity":1,"message":"149","line":14,"column":9,"nodeType":"145","messageId":"146","endLine":14,"endColumn":21},{"ruleId":"143","severity":1,"message":"150","line":22,"column":12,"nodeType":"145","messageId":"146","endLine":22,"endColumn":17},{"ruleId":"151","severity":1,"message":"152","line":36,"column":9,"nodeType":"153","endLine":36,"endColumn":44},{"ruleId":"154","severity":1,"message":"155","line":72,"column":8,"nodeType":"156","endLine":72,"endColumn":10,"suggestions":"157"},{"ruleId":"158","severity":1,"message":"159","line":97,"column":72,"nodeType":"153","endLine":97,"endColumn":120},{"ruleId":"158","severity":1,"message":"159","line":98,"column":87,"nodeType":"153","endLine":98,"endColumn":141},{"ruleId":"160","severity":1,"message":"161","line":113,"column":9,"nodeType":"162","messageId":"163","endLine":132,"endColumn":10},{"ruleId":"160","severity":1,"message":"161","line":140,"column":9,"nodeType":"162","messageId":"163","endLine":159,"endColumn":10},{"ruleId":"160","severity":1,"message":"161","line":163,"column":9,"nodeType":"162","messageId":"163","endLine":173,"endColumn":10},{"ruleId":"154","severity":1,"message":"164","line":197,"column":8,"nodeType":"156","endLine":197,"endColumn":20,"suggestions":"165"},{"ruleId":"143","severity":1,"message":"166","line":5,"column":8,"nodeType":"145","messageId":"146","endLine":5,"endColumn":20},{"ruleId":"143","severity":1,"message":"167","line":6,"column":8,"nodeType":"145","messageId":"146","endLine":6,"endColumn":15},{"ruleId":"143","severity":1,"message":"168","line":10,"column":8,"nodeType":"145","messageId":"146","endLine":10,"endColumn":12},{"ruleId":"143","severity":1,"message":"169","line":45,"column":12,"nodeType":"145","messageId":"146","endLine":45,"endColumn":16},{"ruleId":"143","severity":1,"message":"170","line":45,"column":18,"nodeType":"145","messageId":"146","endLine":45,"endColumn":25},{"ruleId":"154","severity":1,"message":"171","line":70,"column":8,"nodeType":"156","endLine":70,"endColumn":15,"suggestions":"172"},{"ruleId":"143","severity":1,"message":"173","line":72,"column":11,"nodeType":"145","messageId":"146","endLine":72,"endColumn":23},{"ruleId":"160","severity":1,"message":"161","line":73,"column":9,"nodeType":"162","messageId":"163","endLine":80,"endColumn":10},{"ruleId":"143","severity":1,"message":"174","line":91,"column":11,"nodeType":"145","messageId":"146","endLine":91,"endColumn":21},{"ruleId":"143","severity":1,"message":"175","line":107,"column":11,"nodeType":"145","messageId":"146","endLine":107,"endColumn":22},{"ruleId":"158","severity":1,"message":"159","line":121,"column":25,"nodeType":"153","endLine":121,"endColumn":88},{"ruleId":"154","severity":1,"message":"176","line":33,"column":8,"nodeType":"156","endLine":33,"endColumn":18,"suggestions":"177"},{"ruleId":"143","severity":1,"message":"178","line":7,"column":8,"nodeType":"145","messageId":"146","endLine":7,"endColumn":11},{"ruleId":"143","severity":1,"message":"179","line":14,"column":10,"nodeType":"145","messageId":"146","endLine":14,"endColumn":16},{"ruleId":"143","severity":1,"message":"180","line":56,"column":15,"nodeType":"145","messageId":"146","endLine":56,"endColumn":19},{"ruleId":"143","severity":1,"message":"181","line":12,"column":17,"nodeType":"145","messageId":"146","endLine":12,"endColumn":23},{"ruleId":"154","severity":1,"message":"182","line":45,"column":8,"nodeType":"156","endLine":45,"endColumn":10,"suggestions":"183"},{"ruleId":"143","severity":1,"message":"184","line":1,"column":8,"nodeType":"145","messageId":"146","endLine":1,"endColumn":13},{"ruleId":"143","severity":1,"message":"185","line":2,"column":9,"nodeType":"145","messageId":"146","endLine":2,"endColumn":15},{"ruleId":"143","severity":1,"message":"186","line":3,"column":9,"nodeType":"145","messageId":"146","endLine":3,"endColumn":17},{"ruleId":"143","severity":1,"message":"187","line":3,"column":19,"nodeType":"145","messageId":"146","endLine":3,"endColumn":28},{"ruleId":"143","severity":1,"message":"188","line":6,"column":7,"nodeType":"145","messageId":"146","endLine":6,"endColumn":17},{"ruleId":"143","severity":1,"message":"189","line":61,"column":8,"nodeType":"145","messageId":"146","endLine":61,"endColumn":14},{"ruleId":"143","severity":1,"message":"190","line":61,"column":16,"nodeType":"145","messageId":"146","endLine":61,"endColumn":25},{"ruleId":"154","severity":1,"message":"191","line":126,"column":8,"nodeType":"156","endLine":126,"endColumn":38,"suggestions":"192"},{"ruleId":"143","severity":1,"message":"193","line":4,"column":9,"nodeType":"145","messageId":"146","endLine":4,"endColumn":13},{"ruleId":"154","severity":1,"message":"194","line":74,"column":4,"nodeType":"156","endLine":74,"endColumn":6,"suggestions":"195"},{"ruleId":"158","severity":1,"message":"159","line":88,"column":12,"nodeType":"153","endLine":88,"endColumn":51},{"ruleId":"158","severity":1,"message":"159","line":91,"column":15,"nodeType":"153","endLine":91,"endColumn":86},{"ruleId":"143","severity":1,"message":"186","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":25},{"ruleId":"143","severity":1,"message":"184","line":3,"column":8,"nodeType":"145","messageId":"146","endLine":3,"endColumn":13},{"ruleId":"143","severity":1,"message":"187","line":3,"column":26,"nodeType":"145","messageId":"146","endLine":3,"endColumn":35},{"ruleId":"158","severity":1,"message":"159","line":57,"column":13,"nodeType":"153","endLine":57,"endColumn":85},{"ruleId":"143","severity":1,"message":"196","line":4,"column":7,"nodeType":"145","messageId":"146","endLine":4,"endColumn":16},{"ruleId":"154","severity":1,"message":"197","line":26,"column":8,"nodeType":"156","endLine":26,"endColumn":15,"suggestions":"198"},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"no-unused-vars","'Sort' is defined but never used.","Identifier","unusedVar","'ThemeProvider' is defined but never used.","'lightTheme' is defined but never used.","'GlobalStyles' is defined but never used.","'theme' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Switch_Mode must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'genAction'. Either include it or remove the dependency array.","ArrayExpression",["201"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'anim' and 'winWidth'. Either include them or remove the dependency array. You can also do a functional update 'setAnim(a => ...)' if you only need 'anim' in the 'setAnim' call.",["202"],"'BlockContent' is defined but never used.","'sortImg' is defined but never used.","'Like' is defined but never used.","'sort' is assigned a value but never used.","'setSort' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'length' and 'postData'. Either include them or remove the dependency array.",["203"],"'getPostClass' is assigned a value but never used.","'handleLike' is assigned a value but never used.","'handleShare' is assigned a value but never used.","React Hook useEffect has an unnecessary dependency: 'defQuery'. Either exclude it or remove the dependency array. Outer scope values like 'defQuery' aren't valid dependencies because mutating them doesn't re-render the component.",["204"],"'tag' is defined but never used.","'urlFor' is defined but never used.","'date' is assigned a value but never used.","'setHam' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'ref'. Either include it or remove the dependency array.",["205"],"'react' is defined but never used.","'motion' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'timePlates' is assigned a value but never used.","'button' is assigned a value but never used.","'setButton' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'genQuery' and 'getQuery'. Either include them or remove the dependency array.",["206"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'slug'. Either include it or remove the dependency array.",["207"],"'mainBlack' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'winWidth'. Either include it or remove the dependency array.",["208"],"no-global-assign","no-unsafe-negation",{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},"Update the dependencies array to be: [genAction]",{"range":"225","text":"226"},"Update the dependencies array to be: [anim, plateHover, winWidth]",{"range":"227","text":"228"},"Update the dependencies array to be: [length, postData, query]",{"range":"229","text":"230"},"Update the dependencies array to be: []",{"range":"231","text":"232"},"Update the dependencies array to be: [ref]",{"range":"233","text":"234"},"Update the dependencies array to be: [order, queryType, pageNumber, genQuery, getQuery]",{"range":"235","text":"236"},"Update the dependencies array to be: [slug]",{"range":"237","text":"238"},"Update the dependencies array to be: [hover, winWidth]",{"range":"239","text":"240"},[1656,1658],"[genAction]",[6338,6350],"[anim, plateHover, winWidth]",[2119,2126],"[length, postData, query]",[992,1002],"[]",[1302,1304],"[ref]",[3102,3132],"[order, queryType, pageNumber, genQuery, getQuery]",[2081,2083],"[slug]",[776,783],"[hover, winWidth]"]