[{"C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\index.js":"1","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\App.js":"2","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\Post.js":"3","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\Navbar.js":"4","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\Project.js":"5","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\SinglePost.js":"6","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\SingleProject.js":"7","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\Sort.js":"8","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\Switch_Mode.js":"9","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Pages\\Home.js":"10","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Pages\\About.js":"11","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\Paginate.js":"12","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\client.js":"13","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\Like.js":"14","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\Footer.js":"15","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\TimePlate.js":"16","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\PaginateButton.js":"17"},{"size":138,"mtime":1610411139435,"results":"18","hashOfConfig":"19"},{"size":1605,"mtime":1611436164999,"results":"20","hashOfConfig":"19"},{"size":6272,"mtime":1611448639465,"results":"21","hashOfConfig":"19"},{"size":3239,"mtime":1611448658831,"results":"22","hashOfConfig":"19"},{"size":2192,"mtime":1611189339825,"results":"23","hashOfConfig":"19"},{"size":1928,"mtime":1611435774160,"results":"24","hashOfConfig":"19"},{"size":3888,"mtime":1611448476036,"results":"25","hashOfConfig":"19"},{"size":4221,"mtime":1611447888727,"results":"26","hashOfConfig":"19"},{"size":2817,"mtime":1611435554236,"results":"27","hashOfConfig":"19"},{"size":2827,"mtime":1611436096531,"results":"28","hashOfConfig":"19"},{"size":9711,"mtime":1611376254585,"results":"29","hashOfConfig":"19"},{"size":575,"mtime":1611435970331,"results":"30","hashOfConfig":"19"},{"size":138,"mtime":1610411311018,"results":"31","hashOfConfig":"19"},{"size":1458,"mtime":1611436042303,"results":"32","hashOfConfig":"19"},{"size":818,"mtime":1611377690701,"results":"33","hashOfConfig":"19"},{"size":1853,"mtime":1611435497225,"results":"34","hashOfConfig":"19"},{"size":333,"mtime":1611199197587,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1h8w7jq",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\index.js",[],["78","79"],"C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\App.js",["80","81"],"import React, {useState} from 'react'\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport './../styles/App.css'\r\nimport Home from './Pages/Home';\r\nimport About from './Pages/About';\r\nimport Post from './Widgets/Post';\r\nimport SinglePost from './Widgets/SinglePost'\r\nimport Project from './Widgets/Project';\r\nimport Navbar from './Widgets/Navbar';\r\n// import Sort from './Widgets/Sort';\r\nimport SingleProject from './Widgets/SingleProject';\r\nimport Switch_Mode from './Widgets/Switch_Mode';\r\n\r\n\r\n\r\n\r\nexport default function App() {\r\n\r\n    const [theme, setTheme] = useState('Light');\r\n    const htmlTheme = document.getElementById('html')\r\n\r\n    const getTheme = (theme) => {\r\n        setTheme(theme);\r\n        htmlTheme.setAttribute('data-theme', theme)\r\n    }\r\n\r\n    return (\r\n        // <ThemeProvider theme = {lightTheme}>\r\n        //     <GlobalStyles/>\r\n        <div className = \"background-home\">\r\n        <BrowserRouter>\r\n        <Navbar></Navbar>\r\n        <Switch_Mode getTheme = {getTheme}></Switch_Mode>\r\n            <Switch>\r\n                <Route component = {Home} exact path = \"/\"/>\r\n                <Route component = {About} path = \"/about\"/>\r\n                <Route component = {SinglePost} path = \"/post/:slug\"/>\r\n                <Route component = {SingleProject} path = \"/project/:slug\"/>\r\n                <Route component = {Post} path = \"/post\"/>\r\n                <Route component = {Project} path = \"/project\"/>\r\n            </Switch>         \r\n        </BrowserRouter>\r\n        {/* <Footer></Footer> */}\r\n        </div>\r\n        // </ThemeProvider>\r\n    )\r\n}\r\n","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\Post.js",[],"C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\Navbar.js",["82","83"],"C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\Project.js",["84"],"import React, {useState, useEffect} from 'react'\r\nimport sanityClient from '../../client';\r\nimport '../../styles/Projects/Project.css'\r\nimport '../../styles/Post/Post.css';\r\nimport {Link} from 'react-router-dom';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\n\r\nconst defQuery = `*[_type == \"project\"] | order (publishedAt desc){\r\n                    title,\r\n                    slug,\r\n                    publishedAt,\r\n                    description,\r\n                    image{\r\n                        asset->{\r\n                            _id,\r\n                            url\r\n                        },\r\n                        alt\r\n                    }\r\n                }`\r\nexport default function Project() {\r\n    const [projects, setProjects] = useState(null);\r\n\r\nuseEffect (()=> {\r\n        const res = async () => {\r\n            const data = await sanityClient\r\n                .fetch(defQuery)\r\n                setProjects(data);\r\n        }\r\n        res();\r\n         \r\n    }, [defQuery]);\r\n\r\n\r\n\r\n\r\nconst genProjects = projects !== null ? projects.map((project, i) => {\r\n    const date = project.publishedAt\r\n    return (\r\n        <div className = \"project--item\">\r\n            <div className = \"project--img\">\r\n            <img src= {project.image.asset.url} alt = \"imi\"/>\r\n            </div>\r\n            <div className = \"project--mid\">\r\n            <p className = \"project--date\"> {date.slice(0, 10)} </p>\r\n            <div className = \"project--title\"> {project.title} </div>\r\n            <p className = \"project--description\"> {project.description} </p>\r\n            </div>\r\n            <div className = \"project--footer\">\r\n               <Link className = \"btn-proj\" to = {\"/project/\" + project.slug.current}>\r\n                    Explore\r\n                </Link>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}) : <Spinner animation = \"border\" />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className = \"container--projects-main\">\r\n            <div className = \"project--title-main\">\r\n                My Projects\r\n            </div>\r\n            <div className = \"container--projects\">\r\n                {genProjects}\r\n            </div>       \r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\SinglePost.js",[],"C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\SingleProject.js",["85"],"C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\Sort.js",["86"],"import React, {useState, useEffect} from 'react'\r\nimport sortImg from './../../img/sort.png'\r\nimport './../../styles/Post/Post.css'\r\n\r\nconst catTags = [\r\n    {\r\n        category : \"any\",\r\n        ref : `in [\"08cb4970-7a2a-414c-8c5b-38bba50047b5\",\"b5697028-ea7d-4678-9183-901c12526f11\",\"39b43a49-2478-4c34-9e40-e3479d32c35e\" ]`\r\n    },\r\n    {\r\n        category : \"opinion\",\r\n        ref : `== \"08cb4970-7a2a-414c-8c5b-38bba50047b5\"`\r\n    },\r\n    {\r\n        category : 'dev-diaries',\r\n        ref : ` == \"b5697028-ea7d-4678-9183-901c12526f11\"`\r\n    },\r\n    {\r\n        category : \"story\",\r\n        ref : ` == \"39b43a49-2478-4c34-9e40-e3479d32c35e\"`\r\n    }\r\n]\r\n\r\nconst orders = [\r\n    {\r\n        sortOrder: 'asc'\r\n    },\r\n    {\r\n        sortOrder : 'desc'\r\n    }\r\n]\r\n\r\nconst pages = [\r\n    {\r\n        page : '[0...6]'\r\n    },\r\n    {\r\n        page : '[6...12]'\r\n    },\r\n    {\r\n        page : '[12...18]'\r\n    },\r\n    {\r\n        page : '[18...24]'\r\n    },\r\n    {\r\n        page : '[24...30]'\r\n    },\r\n    {\r\n        page: '[30...36]'\r\n    },\r\n    {\r\n        page : '[36...42]'\r\n    }\r\n]\r\n\r\n\r\n\r\n\r\nexport default function Sort(props) {\r\n    const pageNumber = props.pageNumber;\r\n    const getQuery = props.getQuery;\r\n    const [order, setOrder] = useState('desc');\r\n\r\n\r\n// const [sortQuery, setSortQuery] = useState (queries[0]);\r\n// const [button, setButton] = useState(0);\r\nconst [queryType, setqueryType] = useState(0);\r\n\r\n\r\n\r\n    const selectHandle = (e) => {\r\n        setOrder(e.target.value);\r\n        console.log(order)\r\n        \r\n    }\r\n\r\n    const selectQuery = (e) => {\r\n        // setSortQuery (queries[e.target.value])\r\n        setqueryType(e.target.value)\r\n        }\r\n    \r\n    \r\n\r\n    const genQuery = (order, queryType) => {\r\n        switch (queryType){\r\n            case \"0\":\r\n               return `*[_type==\"post\"] | order(publishedAt ${order}){\r\n                    title,\r\n                    slug,\r\n                    publishedAt,\r\n                    categories[]->{\r\n                        title\r\n                    },\r\n                    description,\r\n                    estimate,\r\n                    mainImage{\r\n                        asset->{\r\n                            _id,\r\n                            url\r\n                        },\r\n                        alt\r\n                    }\r\n                }`    \r\n            default:\r\n               return `*[_type==\"post\" && categories[0]._ref ${catTags[queryType].ref}] | order(publishedAt ${order}){\r\n                   _id,\r\n                    title,\r\n                    slug,\r\n                    publishedAt,\r\n                    categories[]->{\r\n                        title\r\n                    },\r\n                    description,\r\n                    estimate,\r\n                    mainImage{\r\n                        asset->{\r\n                            _id,\r\n                            url\r\n                        },\r\n                        alt\r\n                    }\r\n                }${pages[pageNumber].page}`\r\n        }\r\n    }\r\n         \r\n\r\n    useEffect (() => {\r\n        const query = genQuery(order, queryType, pageNumber)\r\n        getQuery(query)\r\n        // console.log(query)\r\n    }, [order, queryType, pageNumber])\r\n\r\n\r\n    return (\r\n        <div className = \"container--sort-main\">\r\n        <div className = \"container--sort\">\r\n            <img src = {sortImg} alt = \"sort\"/>\r\n            <label htmlFor = \"sortby\"> Sort By </label>\r\n        </div>\r\n        <div className = \"sort--select\">\r\n             <select onChange = {e => selectHandle (e)} name = \"order\">\r\n                 <option value= {orders[1].sortOrder}> Newest </option>\r\n                        <option value= {orders[0].sortOrder}> Oldest </option>\r\n                        \r\n                        \r\n                    </select>\r\n            <select onChange = {e => selectQuery (e)} name = \"type\">\r\n                        <option value={0}> Any         </option>\r\n                        <option value={1}>  Opinion     </option>\r\n                        <option value={3}>  Story       </option>\r\n                        <option value={2}>  Dev Diaries </option>\r\n            </select>\r\n        </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\Switch_Mode.js",[],"C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Pages\\Home.js",["87"],"import React from 'react'\r\nimport './../../styles/Home/Home.css';\r\nimport {useState, useEffect} from 'react';\r\nimport {useTransition, animated} from 'react-spring';\r\n// import {motion} from 'framer-motion';\r\nimport linkedin from './../../img/linkedin.png';\r\nimport github from './../../img/github.png';\r\nimport Footer from './../Widgets/Footer';\r\n\r\n\r\nconst newActions = [\r\n    {\r\n        id : 0,\r\n        content : ' code.'\r\n    },\r\n    {\r\n        id : 1,\r\n        content : ' read.'\r\n    },\r\n   {\r\n        id : 2,\r\n        content : ' work.'\r\n    },\r\n    {\r\n        id : 3,\r\n        content : ' design.'\r\n    }, {\r\n        id : 4,\r\n        content : ' create.'\r\n    },\r\n    { \r\n        id : 5,\r\n        content : ' analyze.'\r\n    },\r\n    {\r\n        id : 6,\r\n        content : ' think.'\r\n    },\r\n    {\r\n        id : 7,\r\n        content : ' write.'\r\n    },\r\n    {\r\n        id : 8,\r\n        content : ' imagine.'\r\n    },\r\n    {\r\n        id : 9,\r\n        content: ' experiment.'\r\n    }\r\n]\r\n\r\n\r\nexport default function Home() {\r\n    const [idx, setIdx] = useState(0)\r\n    \r\n\r\n    const transitions = useTransition (newActions[idx], item => item.id, {\r\n        // config : {mass : 10, tension : 70, friction : 20}\r\n        from : {position : 'absolute', opacity : 0, transform : `translateX(-20px)`},\r\n        enter : {opacity : 1, transform : 'translateX(20px)'},\r\n        leave : {opacity : 0, transform : 'translateX(100px)'}\r\n    })\r\n    const genAction = () => {\r\n        setIdx(idx => (idx + 1) % 4);\r\n        if (idx > newActions.length - 1){\r\n            setIdx (0);\r\n        }\r\n    }\r\n    useEffect ( () => {\r\n        setInterval(genAction, 2000)\r\n    }, []) \r\n    \r\n    \r\n\r\n    return (\r\n        \r\n        <div className = \"container--home\">\r\n                <div className = \"container--item header-1\">\r\n                    Hi. I'm\r\n                </div>\r\n                <div className = \"container--item header-2\">\r\n                    Abdullah Khan\r\n                </div>\r\n                <div className = \"container--item headline\">\r\n                    I like to\r\n                    {transitions.map(({item, props, key}) => {\r\n                        return<animated.span key = {key} className = {\"special headline\"} style = {{...props, marginLeft : '0.0em'}} > {\" \"} {item.content} </animated.span>})}\r\n                </div>\r\n                <div className = \"container--icons\">\r\n                    <a   href = \"https://github.com/abdullahkhan9375\"> <img className = \"icon--github\" src = {github} alt = {\"github\"}/> </a>\r\n                    <a href = \"https://www.linkedin.com/in/abdullah-khan-91026917b/\"> < img  className = \"icon--linkedin\" src = {linkedin} alt = {\"linkedin\"}/></a>\r\n                    \r\n                </div>\r\n                        <Footer></Footer>\r\n                </div>\r\n    )\r\n}\r\n","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Pages\\About.js",["88","89","90","91"],"import React from 'react'\r\nimport './../../styles/About/About-timeline.css'\r\nimport './../../styles/About/About-time.css'\r\nimport './../../styles/About/Plates.css';\r\nimport {motion} from 'framer-motion';\r\nimport {useState, useEffect, useRef} from 'react';\r\nimport TimePlate from './../Widgets/TimePlate';\r\n\r\n\r\nconst timePlates = [\r\n    {\r\n        id : '2018',\r\n        class : 'plate-1',\r\n        title : '\"Hello World\"',\r\n        title_class : \"title--1\",\r\n        content_1 : \"I wrote my first line of code. The customary 'Hello World' in Python. I was blown away. I was making small scripts and automating stuff here and there\",\r\n        content_2 : \"Creative Writing caught my interest. I started a blog called “Sochmore” for opinion pieces, short stories and articles. \"\r\n    },\r\n    {\r\n        id : '2019',\r\n        title : 'My First Website',\r\n        title_class : \"title--2\",\r\n        class : 'plate-2',\r\n        content_1 : 'I started studying Data Science and Creative Writing in Macquarie University. While searching for opportunities, I failed my first interview. It pushed me to learn within and without the classroom.',\r\n        content_2 : \"By the end of 2019, I had a solid foundation in Python, HTML, CSS and Javascript. I was making goofy websites, maintaining my blog and going to the gym like crazy.\"\r\n    },\r\n    {\r\n        id : '2020',\r\n        title : 'Just Warming Up',\r\n        title_class : \"title--3\",\r\n        class : 'plate-3',\r\n        content_1 : 'By 2020, I had started delving into the MERN stack. My goal for 2020 was to learn as much as I could. I was juggling Web Dev, University courses and freelance writing. It sure was a lot of work.',\r\n        content_2 : \"By December 2020, I started exploring React.js and Python’s Data Visualization libraries. They were  overwhelming at first but I started liking it even more. I had only one year left for university.\"\r\n    },\r\n    {\r\n        id : 'null',\r\n        title : '',\r\n        title_class : \"\",\r\n        class : 'plate-4',\r\n        content_1 : '',\r\n        content_2 : ''\r\n    }\r\n]\r\n\r\nexport default function About() {\r\n\r\n    const [circ1, setCirc1] = useState(false);\r\n    const [circ2, setCirc2] = useState(false);\r\n    const [circ3, setCirc3] = useState(false);\r\n    const [plate, setPlate] = useState('null');\r\n\r\n    const [idx, setIdx] = useState(null);\r\n    const [plateHover, setPlateHover] = useState(false);\r\n    const back = useRef();\r\n    const [index, setIndex] = useState(0);\r\n\r\n    const [anim_x, setAnim_x] = useState('-310%')\r\n    const [anim, setAnim] = useState({\r\n        left : '-20%'\r\n    })\r\n    // was -20%\r\n    // was -310%\r\n    const [winWidth, setWinWidth] = useState(window.innerWidth);\r\n\r\n\r\n    const checkTheme = () => {\r\n        const html = document.getElementById ('html')\r\n        const theme = html.getAttribute('data-theme')\r\n        if (theme === \"light\"){\r\n            setIndex(0);\r\n        }\r\n        if (theme === \"dark\"){\r\n            setIndex(1)\r\n        }\r\n        if (theme === \"blue\"){\r\n            setIndex(2)\r\n        }\r\n    }\r\n\r\n    const checkWindow = () => {\r\n        if (window.innerWidth <3850){\r\n            setWinWidth(window.innerWidth)\r\n            setAnim_x('-290%')\r\n        }\r\n        if (window.innerWidth < 1920){\r\n            setWinWidth(window.innerWidth)\r\n            setAnim_x('-310%')\r\n        }\r\n        if (window.innerWidth <= 1370){\r\n            setWinWidth(window.innerWidth)\r\n            setAnim_x('-205%')\r\n        }\r\n        if (window.innerWidth <= 1024){\r\n            setWinWidth(window.innerWidth)\r\n            setAnim_x('-140%')\r\n        }\r\n        if (window.innerWidth <= 992){\r\n            setWinWidth(window.innerWidth)\r\n            setAnim_x('-130%')\r\n        }\r\n        if (window.innerWidth <= 700){\r\n            setWinWidth(window.innerWidth)\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n    const handleMouseEnter = (e) => {\r\n        const selected = e.target.innerText;\r\n        const body = document.getElementById('body');\r\n        switch (selected){\r\n            case '2018':\r\n                setCirc2(true)\r\n                setPlateHover(true)\r\n                setIdx(0)\r\n                body.classList.add('plate-blue')\r\n                break\r\n            case '2019':\r\n                setCirc1(true)\r\n                setPlateHover(true)\r\n                setIdx(1)\r\n                body.classList.add('plate-green')\r\n                break\r\n            case '2020':\r\n                setCirc3(true)\r\n                setPlateHover(true)\r\n                setIdx(2)\r\n                body.classList.add('plate-purple')\r\n                break\r\n        }\r\n\r\n        }\r\n\r\n    const handleMouseLeave = (e) => {\r\n        const selected = e.target.innerText;\r\n        const body = document.getElementById('body');\r\n        \r\n        switch(selected) {\r\n            case '2018':\r\n                setCirc2(false)\r\n                setPlateHover(false)\r\n                setIdx(0)\r\n                body.classList.remove('plate-blue')\r\n                break\r\n            case '2019':\r\n                setCirc1(false)\r\n                setPlateHover(false)\r\n                setIdx(1)\r\n                body.classList.remove('plate-green')\r\n                break\r\n            case '2020':\r\n                setCirc3(false)\r\n                setPlateHover(false)\r\n                setIdx(2)\r\n                body.classList.remove('plate-purple')\r\n                break\r\n        }\r\n    }\r\n    const handleMouseClick = (e) => {\r\n        const selected = e.target.innerText;\r\n        switch(selected){\r\n            case '2018':\r\n                setIdx(0);\r\n                break\r\n            case '2019':\r\n                setIdx(1);\r\n                break\r\n            case '2020':\r\n                setIdx(2);\r\n                break\r\n        }\r\n    }\r\n\r\n    useEffect (() => {\r\n        if (idx !== null){\r\n            setPlate(timePlates[idx])\r\n        }\r\n\r\n    }, [idx])\r\n\r\n    useEffect (() => {\r\n        if (plateHover){\r\n            if (winWidth <= 700){\r\n                setAnim ({...anim, left : '5%', opacity : 1})\r\n            } \r\n            else {\r\n                setAnim ({...anim, left : '14.97%', opacity : 1})\r\n            }\r\n        }\r\n        else {\r\n            setAnim ({...anim, left : '-70%', opacity : 0})\r\n        }\r\n        checkTheme();\r\n        checkWindow();\r\n    }, [plateHover])\r\n\r\n    const spring = {\r\n        type : 'spring',\r\n        damping : 15, \r\n        stiffnesss : 20,\r\n        duration : 3\r\n    }\r\n\r\n    const circTheme = [\r\n        {\r\n            circ1_1 : 'rgba(36, 110, 185, 1)',\r\n            circoff : 'rgba(0, 0, 0, 0)',\r\n            circ2_1 : 'rgba(27, 154, 170, 1)',\r\n            circ3_1 : 'rgba(63, 136, 197, 1)'\r\n        },\r\n        {\r\n            circ1_1 : 'rgba(255,51, 31, 1)',\r\n            circoff : 'rgba(0, 0, 0, 0)',\r\n            circ2_1 : 'rgba(164, 3, 31, 1)',\r\n            circ3_1 : 'rgba(158, 42, 43, 1)'\r\n        },\r\n        {\r\n            circ1_1 : 'rgba(0, 63, 145, 1)',\r\n            circoff : 'rgba(0, 0, 0, 0)',\r\n            circ2_1 : 'rgba(0, 18, 66, 1)',\r\n            circ3_1 : 'rgb(0, 0, 49)'\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <>\r\n        <div className = \"container--timeline-main\">\r\n            <div className = \"container--timeline\">\r\n                <motion.div transition = {spring} animate = {{transform : circ2 ? `translateX(${anim_x}) rotate(90deg)` : 'translateX(0px) rotate(-90deg)', border : circ2 ? '5px solid transparent' : '', backgroundColor : circ2 ? `${circTheme[index].circ1_1}` : `${circTheme[index].circoff}`}} className = \"timeline--half-circle circle-1\">\r\n                    \r\n                </motion.div>\r\n                <div className = \"timeline--line line-1\">\r\n                    \r\n                </div>\r\n                <motion.div  transition = {spring} animate = {{transform : circ1 ? `translateX(${anim_x}) rotate(90deg)` : 'translateX(0px) rotate(-90deg)', border : circ1 ? '5px solid transparent' : '', backgroundColor : circ1 ? `${circTheme[index].circ2_1}` : `${circTheme[index].circoff}`}} className = \"timeline--half-circle circle-2\">\r\n                    \r\n                </motion.div>\r\n                <div className = \"timeline--line line-2\">\r\n\r\n                </div>\r\n                <motion.div  transition = {spring} animate = {{transform : circ3 ? `translateX(${anim_x}) rotate(90deg)` : 'translateX(0px) rotate(-90deg)', border : circ3 ? '5px solid transparent' : '', backgroundColor : circ3 ? `${circTheme[index].circ3_1}` : `${circTheme[index].circoff}`}} className = \"timeline--half-circle circle-3\">\r\n\r\n                </motion.div>\r\n            </div>\r\n        </div>\r\n        <div className = \"container--time\">\r\n            \r\n                <div onClick = {(e) => handleMouseClick(e)} onMouseEnter = {(e) => handleMouseEnter(e)} onMouseLeave = {(e) => handleMouseLeave(e)} className = \"time--item time-2018\">\r\n                    <h2> 2018 </h2>\r\n                </div>\r\n                <div  onClick = {(e) => handleMouseClick(e)} onMouseOver = {(e) => handleMouseEnter(e)} onMouseLeave = {(e) => handleMouseLeave(e)}className = \"time--item time-2019\">\r\n                    <h2> 2019 </h2>\r\n                </div>\r\n                <motion.div  onMouseOver = {(e) => handleMouseEnter(e)} onMouseLeave = {(e) => handleMouseLeave(e)}className = \"time--item time-2020\">\r\n                    <h2> 2020 </h2>\r\n                </motion.div>\r\n            \r\n        </div>\r\n        <motion.div ref = {back} transition = {{duration : 1}} animate = {anim} className = {`container--timeplate ${plate.class}`}>\r\n            {plate === null ? null : <TimePlate plate = {plate}></TimePlate>}\r\n        </motion.div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\Paginate.js",[],"C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\client.js",[],"C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\Like.js",["92","93","94"],"import like from './../../img/like.png'\r\nimport unlike from './../../img/unlike.png';\r\nimport react, {useState, useEffect} from 'react';\r\n\r\n\r\n\r\n\r\nexport default function Like (props){\r\n\r\n    const [iconlike, setIconLike] = useState(unlike)\r\n    const [liked, setLiked] = useState(false);\r\n    const [likes, setLikes] = useState(props.likes);\r\n\r\n\r\n    const like_mutation = { \"mutations\" : [{\r\n    \"patch\" : {\r\n        \"id\" : `${props.id}`,\r\n        \"inc\" : {\r\n            \"likes\" : 1\r\n        \r\n    }\r\n}\r\n} ]}\r\n\r\nconst unlike_mutation = {\r\n    \"mutations\" : [{\r\n    \"patch\" : {\r\n        \"id\" : `${props.id}`,\r\n        \"dec\" : {\r\n            \"likes\" : 1\r\n        \r\n    }\r\n}\r\n}]}\r\n    // console.log(props)\r\n\r\n    const handleLike = () => {\r\n        if (liked) {\r\n            setIconLike(unlike)\r\n            setLiked(false)\r\n            setLikes(likes - 1)\r\n            props.handleLike(unlike_mutation)\r\n\r\n        }\r\n        if (!liked){\r\n            setIconLike(like)\r\n            setLiked(true)\r\n            setLikes(likes + 1)\r\n            props.handleLike(like_mutation)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className = \"like--item\">\r\n            <div className = \"like--num\"> {likes} </div>\r\n            <img  onClick = {handleLike} className = \"like--icon\" src = {iconlike}/>\r\n        </div>\r\n    )\r\n}",["95","96"],"C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\Footer.js",[],"C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\TimePlate.js",[],"C:\\Users\\61433\\Desktop\\WebDev\\bl\\portfolio-blog\\src\\components\\Widgets\\PaginateButton.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":19,"column":12,"nodeType":"103","messageId":"104","endLine":19,"endColumn":17},{"ruleId":"105","severity":1,"message":"106","line":33,"column":9,"nodeType":"107","endLine":33,"endColumn":44},{"ruleId":"101","severity":1,"message":"108","line":12,"column":17,"nodeType":"103","messageId":"104","endLine":12,"endColumn":23},{"ruleId":"109","severity":1,"message":"110","line":45,"column":8,"nodeType":"111","endLine":45,"endColumn":10,"suggestions":"112"},{"ruleId":"109","severity":1,"message":"113","line":33,"column":8,"nodeType":"111","endLine":33,"endColumn":18,"suggestions":"114"},{"ruleId":"109","severity":1,"message":"115","line":74,"column":4,"nodeType":"111","endLine":74,"endColumn":6,"suggestions":"116"},{"ruleId":"109","severity":1,"message":"117","line":132,"column":8,"nodeType":"111","endLine":132,"endColumn":38,"suggestions":"118"},{"ruleId":"109","severity":1,"message":"119","line":72,"column":8,"nodeType":"111","endLine":72,"endColumn":10,"suggestions":"120"},{"ruleId":"121","severity":1,"message":"122","line":113,"column":9,"nodeType":"123","messageId":"124","endLine":132,"endColumn":10},{"ruleId":"121","severity":1,"message":"122","line":140,"column":9,"nodeType":"123","messageId":"124","endLine":159,"endColumn":10},{"ruleId":"121","severity":1,"message":"122","line":163,"column":9,"nodeType":"123","messageId":"124","endLine":173,"endColumn":10},{"ruleId":"109","severity":1,"message":"125","line":197,"column":8,"nodeType":"111","endLine":197,"endColumn":20,"suggestions":"126"},{"ruleId":"101","severity":1,"message":"127","line":3,"column":8,"nodeType":"103","messageId":"104","endLine":3,"endColumn":13},{"ruleId":"101","severity":1,"message":"128","line":3,"column":26,"nodeType":"103","messageId":"104","endLine":3,"endColumn":35},{"ruleId":"129","severity":1,"message":"130","line":57,"column":13,"nodeType":"107","endLine":57,"endColumn":85},{"ruleId":"97","replacedBy":"131"},{"ruleId":"99","replacedBy":"132"},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'theme' is assigned a value but never used.","Identifier","unusedVar","react/jsx-pascal-case","Imported JSX component Switch_Mode must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'setHam' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'ref'. Either include it or remove the dependency array.","ArrayExpression",["135"],"React Hook useEffect has an unnecessary dependency: 'defQuery'. Either exclude it or remove the dependency array. Outer scope values like 'defQuery' aren't valid dependencies because mutating them doesn't re-render the component.",["136"],"React Hook useEffect has a missing dependency: 'slug'. Either include it or remove the dependency array.",["137"],"React Hook useEffect has missing dependencies: 'genQuery' and 'getQuery'. Either include them or remove the dependency array.",["138"],"React Hook useEffect has a missing dependency: 'genAction'. Either include it or remove the dependency array.",["139"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'anim' and 'winWidth'. Either include them or remove the dependency array. You can also do a functional update 'setAnim(a => ...)' if you only need 'anim' in the 'setAnim' call.",["140"],"'react' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["133"],["134"],"no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},"Update the dependencies array to be: [ref]",{"range":"153","text":"154"},"Update the dependencies array to be: []",{"range":"155","text":"156"},"Update the dependencies array to be: [slug]",{"range":"157","text":"158"},"Update the dependencies array to be: [order, queryType, pageNumber, genQuery, getQuery]",{"range":"159","text":"160"},"Update the dependencies array to be: [genAction]",{"range":"161","text":"162"},"Update the dependencies array to be: [anim, plateHover, winWidth]",{"range":"163","text":"164"},[1302,1304],"[ref]",[992,1002],"[]",[2047,2049],"[slug]",[3190,3220],"[order, queryType, pageNumber, genQuery, getQuery]",[1659,1661],"[genAction]",[6338,6350],"[anim, plateHover, winWidth]"]